package generic;
import "generic/vector3.schema";

component GameState {
	
    id = 105;
	GameStateEnum current_state = 1;
	uint32 players_on_map_count = 2;
	float highest_execute_time = 3;
	float calculate_wait_time = 4;
	float current_wait_time = 5;
	float rope_time = 6;
	float current_rope_time = 7;
	uint32 winner_faction = 8;
	generic.Vector2f map_center = 9;
	uint32 turn_counter = 10;
	float min_execute_step_time = 11;
	map<int64, uint32> damage_dict = 12;
	bool attack_damage_dealt = 13;
    float init_map_wait_time = 14;
    event InitializeMap initialize_map_event;
	event Cleanup cleanup_state_event;
	event RopeEnd rope_end_event;
}

type InitializeMap
{

}

type RopeEnd
{

}

type Cleanup
{

}



enum GameStateEnum {
	
	waiting_for_players = 0;
	planning = 1;
	interrupt = 2;
	attack = 3;
	move = 4;
	skillshot = 5;
	cleanup = 6;
	calculate_energy = 7;
	game_over = 8;

}

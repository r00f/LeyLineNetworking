package unit;
import "improbable/vector3.schema";
import "unit/action_effect.schema";

component Actions{
	
    id = 125;
	Action basic_move = 1;
	Action basic_attack = 2;
	list<Action> other_actions = 3;
	Action current_selected = 4;
	Action last_selected = 5;
	Action locked_action = 6;
	Action null_action = 7;
	command SelectActionResponse select_action_command(SelectActionRequest);
	command SetTargetResponse set_target_command(SetTargetRequest);
}



type Action {
	string name = 1;
	uint32 combined_cost = 2;
	int32 index = 3;
	list<ActionTarget> targets = 4;
	list<unit.ActionEffect> effects = 5;
}

type ActionTarget {
	type UnitTarget {
		int64 target_id = 1;
		UnitRequisitesEnum unit_req = 2;
	}
	type CellTarget {
		int64 target_id = 1;
		bool require_empty = 2;
		bool require_visible = 3;
	}
	int32 targettingrange = 1;
	uint32 energy_cost = 2;
	UseHighlighterEnum higlighter = 3;
	TargetTypeEnum target_type = 4;
	CellTarget cell_target_nested = 5;
	UnitTarget unit_target_nested = 6;
	list<TargetMod> mods = 7;
	
	
}
type TargetMod {
	
	type AoE {
		int32 radius = 1;
		}
	type Path {
		int32 costpertile = 1;
	}
	list<improbable.Vector3f> secondary_coordinates = 1;
	AoE aoe_nested = 2;
	Path path_nested = 3;
	ModTypeEnum mod_type = 4;

}

enum UnitRequisitesEnum {
	all = 0;
	friendly = 1;
	enemy = 2;
	other = 3;
	self = 4;
}

enum TargetTypeEnum {
cell = 0;
unit = 1;
}

enum ModTypeEnum {
aoe = 0;
path = 1;
}

enum UseHighlighterEnum {
no_pathing = 0;
pathing = 1;
no_pathing_visible = 2;
pathing_visible = 3;
}

type SelectActionRequest {

	int32 action_id = 1;
}

type SelectActionResponse {

}

type SetTargetRequest {
	int64 target_id = 1;
}

type SetTargetResponse {

}